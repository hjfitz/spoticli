pr:
- feature/*
- cleanup/*
- fix/*

variables:
  BUILD_UQ_ID: "$(Build.Repository.ID)-$(Build.BuildId)-$(Build.SourceBranchName)"

stages:


- stage: PR_INIT
  jobs:
  - job: Signal_Init
    steps:
    - bash: yarn add request request-promise
    - bash: node .pipelines/send-result.js init $(date +%s) $(Build.Repository.ID) $(Build.SourceBranchName) initialising $(SERVER_URL)


- stage: PR_CODEQUAL
  jobs:
  - job: Lint_Code
    displayName: Lint Code
    steps:
    - bash: yarn
    - bash: yarn lint
  - job: Test_Code
    displayName: Test Code
    steps:
    - bash: yarn
    - bash: yarn test


- stage: PR_SECURITY
  jobs:
  - job: Code_Analysis
    displayName: Static Source Code Analysis (nodejsscan)
    steps:
    - bash: ./.pipelines/ssca.sh $(Build.Repository.ID) $(Build.SourceBranchName) $(SERVER_URL)
  - job: Dep_Audit
    displayName: Audit Dependencies (yarn audit)
    steps:
    - bash: ./.pipelines/audit.sh $(Build.Repository.ID) $(Build.SourceBranchName) $(SERVER_URL)
  - job: Key_check
    displayName: Check for any committed keys (gitleaks)
    steps:
    - bash: ./.pipelines/check-leaks.sh $(Build.Repository.ID) $(Build.SourceBranchName) $(SERVER_URL)


- stage: PR_EOF
  jobs:
  - job: Signal_End
    steps:
    - bash: yarn add request request-promise
    - bash: node .pipelines/send-result.js end $(date +%s) $(Build.Repository.ID) $(Build.SourceBranchName) initialising $(SERVER_URL)
